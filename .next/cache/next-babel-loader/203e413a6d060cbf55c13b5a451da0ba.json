{"ast":null,"code":"var _jsxFileName = \"/Users/takaitech/Takai-Tech/anime-trailers-next/contexts/OverlayContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport { overlayReducer } from '../reducers/overlayReducer';\nexport var OverlayContext = createContext({\n  open: true,\n  trailers: {}\n});\n\nvar OverlayContextProvider = function OverlayContextProvider(props) {\n  var _useReducer = useReducer(overlayReducer, {\n    open: true,\n    trailers: {}\n  }),\n      overlay = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(OverlayContext.Provider, {\n    value: {\n      overlay: overlay,\n      dispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default OverlayContextProvider;","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/anime-trailers-next/contexts/OverlayContext.js"],"names":["React","createContext","useReducer","overlayReducer","OverlayContext","open","trailers","OverlayContextProvider","props","overlay","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,OAAO,IAAMC,cAAc,GAAGH,aAAa,CAAC;AAACI,EAAAA,IAAI,EAAE,IAAP;AAAcC,EAAAA,QAAQ,EAAE;AAAxB,CAAD,CAApC;;AAEP,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AAAA,oBACVN,UAAU,CAACC,cAAD,EAAgB;AAACE,IAAAA,IAAI,EAAE,IAAP;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAhB,CADA;AAAA,MAC/BG,OAD+B;AAAA,MACtBC,QADsB;;AAGtC,SACI,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACD,MAAAA,OAAO,EAAPA,OAAD;AAAUC,MAAAA,QAAQ,EAARA;AAAV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QADX,CADJ;AAKH,CARD;;AAUA,eAAeJ,sBAAf","sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport { overlayReducer } from '../reducers/overlayReducer'\n\nexport const OverlayContext = createContext({open: true , trailers: {}}) \n\nconst OverlayContextProvider = (props) => {\n    const [overlay, dispatch] = useReducer(overlayReducer,{open: true , trailers: {}})\n\n    return(\n        <OverlayContext.Provider value={{overlay, dispatch}}>\n            {props.children}\n        </OverlayContext.Provider>\n    )\n}\n\nexport default OverlayContextProvider"]},"metadata":{},"sourceType":"module"}