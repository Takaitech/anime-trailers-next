{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var searchReducer = function searchReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return _objectSpread({}, state, {\n        query: action.query\n      });\n\n    case 'ACTIVATE_SEARCH':\n      return _objectSpread({}, state, {\n        active: action.active\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/anime-trailers-next/reducers/searchReducer.js"],"names":["searchReducer","state","action","type","query","active"],"mappings":";;;;;;;;;;;;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,+BAAWF,KAAX;AAAkBG,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhC;;AACJ,SAAK,iBAAL;AACI,+BAAWH,KAAX;AAAkBI,QAAAA,MAAM,EAAEH,MAAM,CAACG;AAAjC;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CATM","sourcesContent":["export const searchReducer = (state, action) => {\n    switch(action.type) {\n        case 'UPDATE_QUERY':\n            return {...state, query: action.query }\n        case 'ACTIVATE_SEARCH':\n            return {...state, active: action.active }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}