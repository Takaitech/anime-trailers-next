{"version":3,"file":"static/webpack/static/development/pages/index.js.96affd1753e991db76d1.hot-update.js","sources":["webpack:///./components/Carousel.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { FilterContext } from \"../contexts/FilterContext\";\nimport { SearchContext } from \"../contexts/SearchContext\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport Anime from \"./Anime\";\n\nconst Carousel = ({ topAnime }) => {\n  const [anime, setAnime] = useState(topAnime);\n  const { filter } = useContext(FilterContext);\n  const { query } = useContext(SearchContext);\n  const { selected, dispatch } = useContext(AnimeContext);\n\n  const carouselSelector = useRef();\n  const [scrollPercent, setScrollPercent] = useState(\"0%\");\n    let getScrollPercent = () => {\n        (carouselSelector.current.scrollLeft /\n            (carouselSelector.current.scrollWidth - carouselSelector.current.offsetWidth)) * 100\n    }\n\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [scrollLeft, setScrollLeft] = useState();\n\n  let onMouseDown = e => {\n    setIsDown(true);\n    setStartX(e.pageX - carouselSelector.current.offsetLeft);\n    setScrollLeft(carouselSelector.current.scrollLeft);\n    let scrollPercentSum = scrollPercentMath()\n    setScrollPercent(scrollPercentMath);\n  };\n\n  let onMouseLeave = e => {\n    setIsDown(false);\n  };\n\n  let onMouseUp = e => {\n    setIsDown(false);\n        setScrollPercent(scrollPercentMath);\n  };\n\n  let onMouseMove = e => {\n    if (!isDown) return;\n    e.preventDefault();\n    const x = e.pageX;\n    const distance = (x - startX) * 3;\n    carouselSelector.current.scrollLeft = scrollLeft - distance;\n   \n    \n  };\n\n  let onTouchStart = e => {\n        setScrollPercent(scrollPercentMath);\n  }\n\n  let onTouchEnd = e => {\n        setScrollPercent(scrollPercentMath);\n  }\n\n  useEffect(() => {\n    const url =\n      filter === \"top\"\n        ? \"https://api.jikan.moe/v3/top/anime/1/bypopularity\"\n        : \"https://api.jikan.moe/v3/top/anime/1/upcoming\";\n    fetch(url)\n      .then(response => response.json())\n      .then(responseJson => setAnime(responseJson.top))\n      .catch(err => console.log(err));\n  }, [filter]);\n\n  useEffect(() => {\n    if (query !== \"\") {\n      function formatQueryParams(params) {\n        const queryItems = Object.keys(params).map(\n          key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\n        );\n        return queryItems.join(\"&\");\n      }\n\n      const baseurl = \"https://api.jikan.moe/v3/search/anime\";\n      let params = {\n        q: query,\n        page: 1,\n        type: \"tv\",\n        limit: 10\n      };\n\n      let url = baseurl + \"?\" + formatQueryParams(params);\n      fetch(url)\n        .then(response => response.json())\n        .then(responseJson => setAnime(responseJson.results))\n        .catch(err => console.log(err));\n    }\n  }, [query]);\n\n  useEffect(() => {\n    dispatch({ type: \"SELECT_ANIME\", selected: {} });\n  }, [anime]);\n\n  return (\n    <div className=\"carouselWrapper\">\n      <div\n        className={`carousel ${isDown === true ? \"isDown\" : \"\"}`}\n        ref={carouselSelector}\n        onMouseDown={e => onMouseDown(e)}\n        onMouseLeave={e => onMouseLeave(e)}\n        onMouseUp={e => onMouseUp(e)}\n        onMouseMove={e => onMouseMove(e)}\n        onTouchStart={e => onTouchStart(e)}\n        onTouchEnd={e => onTouchEnd(e)}\n\n      >\n        {anime.map((anime, index) => (\n          <Anime key={index} anime={anime} />\n        ))}\n      </div>\n      <div className=\"scrollBar\"></div>\n      <style jsx>{`\n        .carouselWrapper {\n          width: 100%;\n        }\n\n        .carousel {\n          cursor: pointer;\n          display: flex;\n          min-height: 175px;\n          max-width: 100%;\n          overflow-y: scroll; /* has to be scroll, not auto */\n          -webkit-overflow-scrolling: touch;\n          padding-bottom: 5px;\n        }\n\n        .carousel {\n          -ms-overflow-style: none; // IE 10+\n          overflow: -moz-scrollbars-none; // Firefox\n        }\n\n        .carousel::-webkit-scrollbar {\n          display: none; // Safari and Chrome\n        }\n\n        .scrollBar {\n          width: ${scrollPercent + '%'};\n          height: 2px;\n          background-color: rgb(71, 71, 51);\n          transition: 0.5s width;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Carousel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AAPA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AAkDA;AACA;AACA;;;;A","sourceRoot":""}